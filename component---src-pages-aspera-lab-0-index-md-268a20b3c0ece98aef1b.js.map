{"version":3,"file":"component---src-pages-aspera-lab-0-index-md-268a20b3c0ece98aef1b.js","mappings":"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","sources":["webpack://example/./src/pages/aspera/lab0/index.md","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/thomas/Documents/IBM/Projects/Internal/techjam/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Setting up and Getting access to the Environment.`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Reserve an environment.`}<br parentName=\"p\"></br>{`\n`}{`Open the following page (Login in with your IBMid).\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://techzone.ibm.com/collection/cloud-pak-for-integration-activation-kit-v-2#tab-3\"\n          }}>{`https://techzone.ibm.com/collection/cloud-pak-for-integration-activation-kit-v-2#tab-3 `}</a>{`.`}<br parentName=\"p\"></br>{`\n`}{`Click on Environments and Choose “CP4I PoT VDI (Desktop)”.`}<br parentName=\"p\"></br>{`\n`}{`Enter the details and submit the request.`}<br parentName=\"p\"></br>{`\n`}{`You will receive an email with details on how to access the reserved server. This may take about 30-60 minutes.    `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Once you have received the email, take note of the servers public IP address in the message. `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open a terminal (or putty) and try connecting to the server.`}</p>\n      </li>\n    </ol>\n    <blockquote>\n      <blockquote parentName=\"blockquote\">\n        <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{}}>{`IP Address: From the email\nPort: 2222\nUsername: ibm\nPassword: IBMDem0s!\n`}</code></pre>\n      </blockquote>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{}}>{`\\`ssh -p 2222 ibm@<IP Address>\\`   \n`}</code></pre>\n    <p><em parentName=\"p\">{`Avoid using the VNC access as we will be disabling VNC access. `}</em></p>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Disable VNC and NoVNC web access. Some of the ports used by VNC are needed by Faspex5 Beta.   `}</p>\n        <blockquote parentName=\"li\">\n          <blockquote parentName=\"blockquote\">\n            <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{}}>{`Edit this file and change the port to 5080\nsudo vi /root/noVNC/utils/launch.sh\nChange PORT=\"80\" to PORT=\"5080\"\nSave the file. \n\nsudo pkill -f python\nsudo pkill -f /usr/bin/Xvnc\n\nCheck if ports 80 and 6000 are free.\nsudo netstat -anp | grep 6000\nsudo netstat -anp | grep 80\n`}</code></pre>\n            <p parentName=\"blockquote\"><em parentName=\"p\">{`Ensure to check and repeat this step if the node is rebooted. `}</em></p>\n          </blockquote>\n        </blockquote>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Restart Docker.  `}</p>\n        <blockquote parentName=\"li\">\n          <blockquote parentName=\"blockquote\">\n            <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{}}>{`sudo systemctl restart docker\n`}</code></pre>\n          </blockquote>\n        </blockquote>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Download Installation Software and License`}</p>\n        <blockquote parentName=\"li\">\n          <blockquote parentName=\"blockquote\">\n            <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{}}>{`sudo mkdir /opt/software\ncd /opt/software/\n\nsudo wget -v -O ibm-aspera-lab-software.zip https://ibm.box.com/shared/static/q4zzlhk5pn5osn0ojtzx67q8ulg9ig2e.zip\n\nsudo wget -v -O ibm-aspera-lab-license.zip https://ibm.box.com/shared/static/y5s6c2abk2m81iaji2zctyg976qmt0ga.zip\n\nsudo unzip ibm-aspera-lab-software.zip\nsudo unzip ibm-aspera-lab-license.zip\n`}</code></pre>\n          </blockquote>\n        </blockquote>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","Object","assign","mdxType","parentName","isMDXComponent","_cx","title","theme","_ref$tabs","tabs","React","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","_ref2","baseUrl","subDirectory","href","branch","PageTabs","_React$Component","apply","arguments","_inheritsLoose","prototype","render","_this$props","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","date","lastModified","Date","Row","Column","toLocaleDateString","day","year","month","pageContext","children","location","Title","_pageContext$frontmat","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","PageHeader","label","Main","padded","EditLink","LastModifiedDate","NextPrevious","Utils"],"sourceRoot":""}